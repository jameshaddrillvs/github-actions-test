name: Run Unit Tests and Linting
"on": 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  unit_test-lint:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up node 
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install

      - name: Run tests 
        run: npm run test:unit

      - name: Run lint 
        run: npm run lint
  deploy:
    needs: unit_test-lint
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: set up Node JS environment
        uses: actions/setup-node@v3.1.1

      - name: npm install
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install

      - name: npm build
        run: npm run build
          
      - name: S3 Sync
        uses: jakejarvis/s3-sync-action@v0.5.1
        with: 
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-2'
          SOURCE_DIR: 'dist'